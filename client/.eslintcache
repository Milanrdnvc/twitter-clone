[{"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\index.jsx":"1","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\GlobalStyles.js":"2","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\App.jsx":"3","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\context\\UserContext.js":"4","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Home\\Home.jsx":"5","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Login\\Login.jsx":"6","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Register\\Register.jsx":"7","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\HomeStyles.js":"8","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\RegisterStyles.js":"9","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\LoginStyles.js":"10","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\shared components\\Error.jsx":"11","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\GadgetsStyles.js":"12","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\ErrorStyles.js":"13","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\FeedStyles.js":"14","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\SidebarStyles.js":"15","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\ProfileStyles.js":"16","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Home\\CreateTuwueet.jsx":"17","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\shared components\\EditProfile.jsx":"18","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Sidebar\\Sidebar.jsx":"19","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Sidebar\\Option.jsx":"20","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\AppStyles.js":"21","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Profile\\Profile.jsx":"22","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Comments\\Comments.jsx":"23","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\CommentsStyles.js":"24","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Comments\\SubmitComment.jsx":"25","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Comments\\Comment.jsx":"26","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\shared components\\Tuwueet.jsx":"27","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Notifications\\Notifications.jsx":"28","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\NotificationsStyles.js":"29","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Notifications\\Notification.jsx":"30","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\helpers.js":"31"},{"size":386,"mtime":1617529641064,"results":"32","hashOfConfig":"33"},{"size":520,"mtime":1613573354604,"results":"34","hashOfConfig":"33"},{"size":1926,"mtime":1621166904926,"results":"35","hashOfConfig":"33"},{"size":79,"mtime":1609844142770,"results":"36","hashOfConfig":"33"},{"size":2242,"mtime":1621524732921,"results":"37","hashOfConfig":"33"},{"size":2113,"mtime":1620911240472,"results":"38","hashOfConfig":"33"},{"size":2815,"mtime":1621166830498,"results":"39","hashOfConfig":"33"},{"size":3467,"mtime":1620912953652,"results":"40","hashOfConfig":"33"},{"size":1641,"mtime":1620911318277,"results":"41","hashOfConfig":"33"},{"size":1474,"mtime":1620911324827,"results":"42","hashOfConfig":"33"},{"size":266,"mtime":1609930667704,"results":"43","hashOfConfig":"33"},{"size":1140,"mtime":1613322147322,"results":"44","hashOfConfig":"33"},{"size":436,"mtime":1609930792095,"results":"45","hashOfConfig":"33"},{"size":0,"mtime":1613930144175,"results":"46","hashOfConfig":"33"},{"size":1640,"mtime":1620906181106,"results":"47","hashOfConfig":"33"},{"size":2887,"mtime":1620724929103,"results":"48","hashOfConfig":"33"},{"size":3057,"mtime":1621167389280,"results":"49","hashOfConfig":"33"},{"size":1929,"mtime":1621168380205,"results":"50","hashOfConfig":"33"},{"size":2295,"mtime":1620991738247,"results":"51","hashOfConfig":"33"},{"size":382,"mtime":1613751717769,"results":"52","hashOfConfig":"33"},{"size":215,"mtime":1617445376093,"results":"53","hashOfConfig":"33"},{"size":3764,"mtime":1621187908404,"results":"54","hashOfConfig":"33"},{"size":3738,"mtime":1621078184823,"results":"55","hashOfConfig":"33"},{"size":2890,"mtime":1614609487897,"results":"56","hashOfConfig":"33"},{"size":3641,"mtime":1621167456179,"results":"57","hashOfConfig":"33"},{"size":777,"mtime":1620736852467,"results":"58","hashOfConfig":"33"},{"size":3485,"mtime":1620996176396,"results":"59","hashOfConfig":"33"},{"size":1916,"mtime":1621078515264,"results":"60","hashOfConfig":"33"},{"size":776,"mtime":1614684103671,"results":"61","hashOfConfig":"33"},{"size":514,"mtime":1620827078218,"results":"62","hashOfConfig":"33"},{"size":1199,"mtime":1621167243182,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1t13ebw",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\index.jsx",[],["137","138"],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\GlobalStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\App.jsx",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\context\\UserContext.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Home\\Home.jsx",["139","140"],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Register\\Register.jsx",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\HomeStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\RegisterStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\LoginStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\shared components\\Error.jsx",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\GadgetsStyles.js",[],["141","142"],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\ErrorStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\FeedStyles.js",[],["143","144"],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\SidebarStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\ProfileStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Home\\CreateTuwueet.jsx",["145"],"import imageIcon from '../../pictures/image.svg';\r\nimport UserContext from '../../context/UserContext';\r\nimport { useState, useRef, useContext } from 'react';\r\nimport { getAuthToken, validateToken, POST, uploadImage } from '../../helpers';\r\nimport {\r\n  CreateTuwueetWrapper,\r\n  CreateTuwueetTextInput,\r\n  CreateTuwueetPfp,\r\n  CreateTuwueetOptions,\r\n  CreateTuwueetForm,\r\n  CreateTuwueetImgPreview,\r\n  TuwueetBtn,\r\n} from '../styled/HomeStyles';\r\n\r\nfunction CreateTuwueet({ loadTuwueets, loggedIn }) {\r\n  const [text, setText] = useState('');\r\n  const [encodedImg, setEncodedImg] = useState(null);\r\n  const textInput = useRef(null);\r\n  const { userData, profilePicture } = useContext(UserContext);\r\n  if (!loggedIn) return null;\r\n\r\n  function handleFileInputChange(e) {\r\n    const file = e.target.files[0];\r\n    previewFile(file);\r\n  }\r\n\r\n  function previewFile(file) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setEncodedImg(reader.result);\r\n    };\r\n  }\r\n\r\n  async function postTuwueet(e) {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n    const token = getAuthToken();\r\n    const validToken = (await validateToken(token)).data;\r\n    if (!validToken) return;\r\n    let uploadedImg;\r\n    if (encodedImg)\r\n      uploadedImg = (await uploadImage(encodedImg, token)).data.url;\r\n    await POST(\r\n      'tuwueets/create',\r\n      {\r\n        text,\r\n        img: uploadedImg,\r\n        username: userData.user.username,\r\n        pfp: profilePicture,\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Auth-Token': token,\r\n        },\r\n      }\r\n    );\r\n    setEncodedImg(null);\r\n    setText('');\r\n    loadTuwueets();\r\n    textInput.current.innerText = '';\r\n  }\r\n\r\n  return (\r\n    <CreateTuwueetWrapper>\r\n      <CreateTuwueetPfp src={profilePicture} />\r\n      <CreateTuwueetForm onSubmit={postTuwueet}>\r\n        <CreateTuwueetTextInput\r\n          contentEditable=\"true\"\r\n          onBlur={e => setText(e.target.innerText.trim())}\r\n          onFocus={e => setText(e.target.innerText.trim())}\r\n          onChange={e => setText(e.target.innerText.trim())}\r\n          onKeyDown={e => setText(e.target.innerText.trim())}\r\n          onKeyUp={e => setText(e.target.innerText.trim())}\r\n          onPaste={e => setText(e.target.innerText.trim())}\r\n          ref={textInput}\r\n          // We could also use pre-built react-contenteditable component\r\n        />\r\n        {encodedImg && (\r\n          <CreateTuwueetImgPreview>\r\n            <img src={encodedImg} alt=\"test\" width=\"100%\" />\r\n            <span onClick={() => setEncodedImg(null)}>&times;</span>\r\n          </CreateTuwueetImgPreview>\r\n        )}\r\n        <CreateTuwueetOptions>\r\n          <img src={imageIcon} alt=\"Image icon\" width=\"30px\" />\r\n          <input type=\"file\" onChange={handleFileInputChange} />\r\n          <TuwueetBtn type=\"submit\">Tuwueet</TuwueetBtn>\r\n        </CreateTuwueetOptions>\r\n      </CreateTuwueetForm>\r\n    </CreateTuwueetWrapper>\r\n  );\r\n}\r\n\r\nexport default CreateTuwueet;\r\n","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\shared components\\EditProfile.jsx",["146"],"import ReactDOM from 'react-dom';\r\nimport {\r\n  EditProfileWrapper,\r\n  Details,\r\n  EditDetails,\r\n  EditDetailsForm,\r\n} from '../styled/ProfileStyles';\r\n\r\nfunction EditProfile({\r\n  open,\r\n  setOpen,\r\n  updateProfile,\r\n  profilePicture,\r\n  bio,\r\n  location,\r\n  website,\r\n  username,\r\n  joined,\r\n}) {\r\n  if (!open) return null;\r\n\r\n  async function handleEditProfileSubmit(e) {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    e.target.reset();\r\n    const formBio = data.get('bio');\r\n    const formLocation = data.get('location');\r\n    const formWebsite = data.get('website');\r\n    updateProfile({\r\n      encodedImg: [profilePicture, 'old'],\r\n      bio: formBio || bio,\r\n      location: formLocation || location,\r\n      website: formWebsite || website,\r\n    });\r\n    setOpen(false);\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <EditProfileWrapper>\r\n      <span onClick={() => setOpen(false)}>&times;</span>\r\n      <Details>\r\n        <img src={profilePicture} alt=\"Profile picture\" width=\"70px\" />\r\n        <span>{username}</span>\r\n        <small>Joined {new Date(joined).toDateString()}</small>\r\n        <small>{bio}</small>\r\n        <small>{location}</small>\r\n        <small>\r\n          <a href={website || '#'}>My Website</a>\r\n        </small>\r\n      </Details>\r\n      <EditDetails>\r\n        <EditDetailsForm onSubmit={handleEditProfileSubmit}>\r\n          <input type=\"text\" name=\"bio\" placeholder=\"Bio\" />\r\n          <input type=\"text\" name=\"location\" placeholder=\"Location\" />\r\n          <input\r\n            type=\"text\"\r\n            name=\"website\"\r\n            placeholder=\"Website\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <button onClick={() => setOpen(false)}>Cancel</button>\r\n          <button type=\"submit\">Save</button>\r\n        </EditDetailsForm>\r\n      </EditDetails>\r\n    </EditProfileWrapper>,\r\n    document.getElementById('edit-profile')\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Sidebar\\Sidebar.jsx",["147"],"import SidebarWrapper from '../styled/SidebarStyles';\r\nimport Option from './Option';\r\nimport EditProfile from '../shared components/EditProfile';\r\nimport Notifications from '../Notifications/Notifications';\r\nimport home from '../../pictures/home.svg';\r\nimport notification from '../../pictures/notification.svg';\r\nimport login from '../../pictures/login.svg';\r\nimport logo from '../../pictures/logo.png';\r\nimport profile from '../../pictures/profile.svg';\r\nimport UserContext from '../../context/UserContext';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Sidebar({ logout }) {\r\n  const [openEditProfile, setOpenEditProfile] = useState(false);\r\n  const [openNotifications, setOpenNotifications] = useState(false);\r\n  const [styles, setStyles] = useState({ visibility: 'visible' });\r\n  const { userData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    history.listen(location => {\r\n      if (location.pathname === '/login' || location.pathname === '/register') {\r\n        setStyles({ visibility: 'hidden' });\r\n      } else if (location.pathname === '/')\r\n        setStyles({ visibility: 'visible' });\r\n    });\r\n    if (\r\n      history.location.pathname === '/login' ||\r\n      history.location.pathname === '/register'\r\n    ) {\r\n      setStyles({ visibility: 'hidden' });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SidebarWrapper style={styles}>\r\n        <Option href=\"/\" img={logo}></Option>\r\n        <Option href=\"/\" text=\"Home\" img={home}></Option>\r\n        <Option\r\n          href=\"#\"\r\n          text=\"Notifications\"\r\n          img={notification}\r\n          onClick={() => setOpenNotifications(true)}\r\n        ></Option>\r\n        {userData.user ? (\r\n          <Option href=\"#\" text=\"Log Out\" img={login} onClick={logout} />\r\n        ) : (\r\n          <Option href=\"/login\" text=\"Log In\" img={login} />\r\n        )}\r\n        <Option\r\n          href=\"#\"\r\n          img={profile}\r\n          onClick={() => setOpenEditProfile(true)}\r\n        ></Option>\r\n      </SidebarWrapper>\r\n      <EditProfile open={openEditProfile} setOpen={setOpenEditProfile} />\r\n      <Notifications open={openNotifications} setOpen={setOpenNotifications} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Sidebar\\Option.jsx",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\AppStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Profile\\Profile.jsx",["148","149","150"],"import edit from '../../pictures/edit.svg';\r\nimport EditProfile from '../shared components/EditProfile';\r\nimport UserContext from '../../context/UserContext';\r\nimport {\r\n  ProfileWrapper,\r\n  ProfilePfp,\r\n  EditButton,\r\n} from '../styled/ProfileStyles';\r\nimport {\r\n  getAuthToken,\r\n  POST,\r\n  GET,\r\n  validateToken,\r\n  uploadImage,\r\n} from '../../helpers';\r\nimport { useState, useContext, useEffect } from 'react';\r\nimport e from 'cors';\r\n\r\nfunction Profile() {\r\n  const [openEditProfile, setOpenEditProfile] = useState(false);\r\n  const [bio, setBio] = useState(null);\r\n  const [location, setLocation] = useState(null);\r\n  const [website, setWebsite] = useState(null);\r\n  const [joined, setJoined] = useState(null);\r\n  const {\r\n    profilePicture,\r\n    setProfilePicture,\r\n    userData: {\r\n      user: { username },\r\n    },\r\n  } = useContext(UserContext);\r\n\r\n  function handleFileInputChange(e) {\r\n    const file = e.target.files[0];\r\n    previewFile(file);\r\n  }\r\n\r\n  async function previewFile(file) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      updateProfile({ encodedImg: reader.result, bio, location, website });\r\n    };\r\n  }\r\n\r\n  async function updateProfile({ encodedImg, bio, location, website }) {\r\n    const token = getAuthToken();\r\n    const validToken = (await validateToken(token)).data;\r\n    if (!validToken) return;\r\n    let uploadedImg;\r\n    if (typeof encodedImg === 'string')\r\n      uploadedImg = (await uploadImage(encodedImg, token)).data.url;\r\n    else uploadedImg = encodedImg[0];\r\n    const updatedUser = (\r\n      await POST(\r\n        '/users/editProfile',\r\n        {\r\n          pfp: uploadedImg,\r\n          bio,\r\n          location,\r\n          website,\r\n        },\r\n        {\r\n          headers: {\r\n            'X-Auth-Token': token,\r\n          },\r\n        }\r\n      )\r\n    ).data.user;\r\n    setProfilePicture(updatedUser.pfp);\r\n    setBio(updatedUser.bio);\r\n    setLocation(updatedUser.location);\r\n    setWebsite(updatedUser.website);\r\n  }\r\n\r\n  async function getProfileInfo() {\r\n    const token = getAuthToken();\r\n    const validToken = (await validateToken(token)).data;\r\n    if (!validToken) return;\r\n    const profileData = (\r\n      await GET('/users/profileInfo', {\r\n        headers: {\r\n          'X-Auth-Token': token,\r\n        },\r\n      })\r\n    ).data;\r\n    setProfilePicture(profileData.pfp);\r\n    setBio(profileData.bio);\r\n    setLocation(profileData.location);\r\n    setWebsite(profileData.website);\r\n    setJoined(profileData.joined);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProfileInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ProfileWrapper>\r\n        <ProfilePfp>\r\n          <img\r\n            src={profilePicture}\r\n            alt=\"Profile\"\r\n            width=\"100px\"\r\n            height=\"100px\"\r\n          />\r\n          <EditButton>\r\n            <input type=\"file\" onChange={handleFileInputChange} />\r\n            <img src={edit} alt=\"Edit\" width=\"25px\" />\r\n          </EditButton>\r\n        </ProfilePfp>\r\n        <p>Bio: {bio}</p>\r\n        <p>Location: {location}</p>\r\n        <a href={website || '#'} target=\"_blank\">\r\n          Website\r\n        </a>\r\n        <p>Joined: {new Date(joined).toDateString()}</p>\r\n        <button onClick={() => setOpenEditProfile(true)}>Edit Profile</button>\r\n      </ProfileWrapper>\r\n      <EditProfile\r\n        open={openEditProfile}\r\n        setOpen={setOpenEditProfile}\r\n        setBio={setBio}\r\n        setLocation={setLocation}\r\n        setWebsite={setWebsite}\r\n        updateProfile={updateProfile}\r\n        profilePicture={profilePicture}\r\n        bio={bio}\r\n        location={location}\r\n        website={website}\r\n        username={username}\r\n        joined={joined}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Comments\\Comments.jsx",["151"],"import Tuwueet from '../shared components/Tuwueet';\r\nimport SubmitComment from './SubmitComment';\r\nimport Comment from './Comment';\r\nimport { POST, GET, getAuthToken, validateToken } from '../../helpers';\r\nimport { useState, useEffect } from 'react';\r\nimport { CommentsHeader, CommentsWrapper } from '../styled/CommentsStyles';\r\n\r\nfunction Comments({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) {\r\n  const [Comments, setComments] = useState(null);\r\n  const [TuwueetComponent, setTuwueetComponent] = useState(null);\r\n\r\n  async function getTuwueet(id) {\r\n    const token = getAuthToken();\r\n    const validToken = validateToken(token);\r\n    if (!validToken) return;\r\n    const tuwueet = (\r\n      await POST(\r\n        '/tuwueets',\r\n        { id },\r\n        {\r\n          headers: {\r\n            'X-Auth-Token': token,\r\n          },\r\n        }\r\n      )\r\n    ).data.tuwueet;\r\n    renderTuwueet(tuwueet, token);\r\n  }\r\n\r\n  async function renderTuwueet(tuwueet, token) {\r\n    const user = await GET('/users', {\r\n      headers: {\r\n        'X-Auth-Token': token,\r\n      },\r\n    });\r\n    const userId = user.data.id;\r\n    const isLiked = Boolean(tuwueet.likes.find(user => user.userId === userId));\r\n    setTuwueetComponent(\r\n      <Tuwueet\r\n        text={tuwueet.text}\r\n        img={tuwueet.img}\r\n        username={tuwueet.username}\r\n        createdAt={tuwueet.createdAt}\r\n        id={tuwueet._id}\r\n        likesNum={tuwueet.likes.length}\r\n        commentsNum={tuwueet.comments.length}\r\n        liked={isLiked}\r\n        loggedIn={true}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderComments(comments, token) {\r\n    const allComments = comments.comments.map((comment, idx) => {\r\n      return (\r\n        <Comment\r\n          username={comment.createdBy}\r\n          img={comment.img}\r\n          createdAt={comment.createdAt}\r\n          text={comment.text}\r\n          userPfp={comment.userImg}\r\n          key={idx}\r\n        />\r\n      );\r\n    });\r\n    setComments(allComments.reverse());\r\n    updateTuwueetCommentsNumber(allComments.length, token);\r\n  }\r\n\r\n  async function updateTuwueetCommentsNumber(commentsNum, token) {\r\n    const user = await GET('/users', {\r\n      headers: {\r\n        'X-Auth-Token': token,\r\n      },\r\n    });\r\n    const tuwueet = (\r\n      await POST(\r\n        '/tuwueets',\r\n        { id },\r\n        {\r\n          headers: {\r\n            'X-Auth-Token': token,\r\n          },\r\n        }\r\n      )\r\n    ).data.tuwueet;\r\n    const userId = user.data.id;\r\n    const isLiked = Boolean(tuwueet.likes.find(user => user.userId === userId));\r\n    setTuwueetComponent(\r\n      <Tuwueet\r\n        text={tuwueet.text}\r\n        img={tuwueet.img}\r\n        username={tuwueet.username}\r\n        createdAt={tuwueet.createdAt}\r\n        id={tuwueet._id}\r\n        likesNum={tuwueet.likes.length}\r\n        commentsNum={commentsNum}\r\n        liked={isLiked}\r\n        pfp={tuwueet.pfp}\r\n        loggedIn={true}\r\n      />\r\n    );\r\n  }\r\n\r\n  async function getAllComments(tuwueetId) {\r\n    const token = getAuthToken();\r\n    const validToken = (await validateToken(token)).data;\r\n    if (!validToken) return;\r\n    const comments = await POST(\r\n      '/tuwueets/allComments',\r\n      { tuwueetId },\r\n      {\r\n        headers: {\r\n          'X-Auth-Token': token,\r\n        },\r\n      }\r\n    );\r\n    return [comments.data, token];\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllComments(id)\r\n      .then(res => renderComments(res[0], res[1]))\r\n      .catch(err => console.error(err));\r\n    getTuwueet(id);\r\n  }, []);\r\n\r\n  return (\r\n    <CommentsWrapper>\r\n      <CommentsHeader>Comments</CommentsHeader>\r\n      {TuwueetComponent}\r\n      <SubmitComment tuwueetId={id} renderComments={renderComments} />\r\n      {Comments}\r\n    </CommentsWrapper>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\CommentsStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Comments\\SubmitComment.jsx",["152"],"import imageIcon from '../../pictures/image.svg';\r\nimport UserContext from '../../context/UserContext';\r\nimport { useState, useContext, useRef } from 'react';\r\nimport {\r\n  SubmitCommentWrapper,\r\n  SubmitCommentForm,\r\n  SubmitCommentOptions,\r\n  SubmitCommentImagePreview,\r\n} from '../styled/CommentsStyles';\r\nimport { POST, getAuthToken, validateToken, uploadImage } from '../../helpers';\r\n\r\nfunction SubmitComment({ tuwueetId, renderComments }) {\r\n  const [text, setText] = useState('');\r\n  const [encodedImg, setEncodedImg] = useState(null);\r\n  const { userData, profilePicture } = useContext(UserContext);\r\n  const commentInput = useRef(null);\r\n\r\n  function handleFileInputChange(e) {\r\n    const file = e.target.files[0];\r\n    previewFile(file);\r\n  }\r\n\r\n  function previewFile(file) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setEncodedImg(reader.result);\r\n    };\r\n  }\r\n\r\n  async function postComment(e) {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n    const token = getAuthToken();\r\n    const validToken = (await validateToken(token)).data;\r\n    if (!validToken) return;\r\n    const createdAt = new Date();\r\n    let uploadedImg;\r\n    if (encodedImg)\r\n      uploadedImg = (await uploadImage(encodedImg, token)).data.url;\r\n    const comments = await POST(\r\n      '/tuwueets/comment',\r\n      {\r\n        text,\r\n        img: uploadedImg,\r\n        username: userData.user.username,\r\n        tuwueetId,\r\n        createdAt,\r\n        userImg: profilePicture,\r\n      },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Auth-Token': token,\r\n        },\r\n      }\r\n    );\r\n    const tuwueet = (\r\n      await POST(\r\n        '/tuwueets/',\r\n        {\r\n          id: tuwueetId,\r\n        },\r\n        {\r\n          headers: {\r\n            'X-Auth-Token': token,\r\n          },\r\n        }\r\n      )\r\n    ).data.tuwueet;\r\n    setEncodedImg(null);\r\n    setText('');\r\n    renderComments(comments.data, token);\r\n    commentInput.current.innerText = '';\r\n    if (tuwueet.userId !== userData.user.id)\r\n      sendCommentNotification(tuwueet, token);\r\n  }\r\n\r\n  async function sendCommentNotification(tuwueet, token) {\r\n    await POST(\r\n      '/users/sendNotification',\r\n      {\r\n        type: 'comment',\r\n        tuwueetId,\r\n        username: userData.user.username,\r\n        userId: tuwueet.userId,\r\n      },\r\n      {\r\n        headers: {\r\n          'X-Auth-Token': token,\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SubmitCommentWrapper>\r\n      <SubmitCommentForm onSubmit={postComment}>\r\n        <SubmitCommentOptions>\r\n          <div\r\n            ref={commentInput}\r\n            contentEditable=\"true\"\r\n            onBlur={e => setText(e.target.innerText.trim())}\r\n            onFocus={e => setText(e.target.innerText.trim())}\r\n            onChange={e => setText(e.target.innerText.trim())}\r\n            onKeyDown={e => setText(e.target.innerText.trim())}\r\n            onKeyUp={e => setText(e.target.innerText.trim())}\r\n            onPaste={e => setText(e.target.innerText.trim())}\r\n          />\r\n          <input type=\"file\" onChange={handleFileInputChange} />\r\n          <img src={imageIcon} alt=\"Picture icon\" width=\"30px\" />\r\n        </SubmitCommentOptions>\r\n        <button type=\"submit\">Submit</button>\r\n      </SubmitCommentForm>\r\n      {encodedImg && (\r\n        <SubmitCommentImagePreview>\r\n          <img src={encodedImg} alt=\"\" width=\"100%\" />\r\n          <span onClick={() => setEncodedImg(null)}>&times;</span>\r\n        </SubmitCommentImagePreview>\r\n      )}\r\n    </SubmitCommentWrapper>\r\n  );\r\n}\r\n\r\nexport default SubmitComment;\r\n","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Comments\\Comment.jsx",["153"],"import relativeDate from 'tiny-relative-date';\r\nimport UserContext from '../../context/UserContext';\r\nimport { useContext } from 'react';\r\nimport { CommentWrapper, CommentContent } from '../styled/CommentsStyles';\r\n\r\nfunction Comment({ username, img, createdAt, text, userPfp }) {\r\n  const date = relativeDate(createdAt);\r\n  const { profilePicture } = useContext(UserContext);\r\n\r\n  return (\r\n    <CommentWrapper>\r\n      <img src={userPfp} alt=\"Avatar\" width=\"50px\" height=\"50px\" />\r\n      <CommentContent>\r\n        <p>\r\n          <strong>{username}</strong> <em>{date}</em>\r\n          <br />\r\n          {text}\r\n        </p>\r\n        {img !== 'no img' && <img src={img} alt=\"Comment post\" />}\r\n      </CommentContent>\r\n    </CommentWrapper>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\shared components\\Tuwueet.jsx",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Notifications\\Notifications.jsx",["154"],"import ReactDOM from 'react-dom';\r\nimport Notification from './Notification';\r\nimport like from '../../pictures/like.svg';\r\nimport comment from '../../pictures/comment.svg';\r\nimport { NotificationsWrapper } from '../styled/NotificationsStyles';\r\nimport { getAuthToken, validateToken, GET } from '../../helpers';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Notifications({ open, setOpen }) {\r\n  const [NotificationComponent, setNotificationComponent] = useState(null);\r\n\r\n  async function getAllNotifications() {\r\n    const token = getAuthToken();\r\n    const validToken = (await validateToken(token)).data;\r\n    if (!validToken) return;\r\n    const notifications = (\r\n      await GET('/users/allNotifications', {\r\n        headers: {\r\n          'X-Auth-Token': token,\r\n        },\r\n      })\r\n    ).data.notifications;\r\n    renderNotifications(notifications);\r\n  }\r\n\r\n  function renderNotifications(notifications) {\r\n    setNotificationComponent(\r\n      notifications.map((notification, idx) => {\r\n        return (\r\n          <Notification\r\n            icon={notification.type === 'like' ? like : comment}\r\n            text={\r\n              notification.type === 'like'\r\n                ? `${notification.username} liked your tuwueet!`\r\n                : `${notification.username} commented on your tuwueet!`\r\n            }\r\n            iconAlt={notification.type}\r\n            tuwueetId={notification.tuwueetId}\r\n            setOpen={setOpen}\r\n            key={idx}\r\n          />\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    getAllNotifications();\r\n  }, [open]);\r\n\r\n  if (!open) return null;\r\n\r\n  return ReactDOM.createPortal(\r\n    <NotificationsWrapper>\r\n      {NotificationComponent}\r\n      <span onClick={() => setOpen(false)}>&times;</span>\r\n    </NotificationsWrapper>,\r\n    document.getElementById('notifications')\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\styled\\NotificationsStyles.js",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\components\\Notifications\\Notification.jsx",[],"C:\\Users\\Milan\\Desktop\\Games\\Programming\\React\\twitter-clone\\client\\src\\helpers.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":9,"column":7,"nodeType":"161","messageId":"162","endLine":9,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":67,"column":6,"nodeType":"165","endLine":67,"endColumn":8,"suggestions":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","replacedBy":"168"},{"ruleId":"155","replacedBy":"169"},{"ruleId":"157","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":87,"column":11,"nodeType":"173","endLine":87,"endColumn":64},{"ruleId":"171","severity":1,"message":"172","line":42,"column":9,"nodeType":"173","endLine":42,"endColumn":72},{"ruleId":"163","severity":1,"message":"174","line":34,"column":6,"nodeType":"165","endLine":34,"endColumn":8,"suggestions":"175"},{"ruleId":"159","severity":1,"message":"176","line":17,"column":8,"nodeType":"161","messageId":"162","endLine":17,"endColumn":9},{"ruleId":"163","severity":1,"message":"177","line":96,"column":6,"nodeType":"165","endLine":96,"endColumn":8,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":115,"column":34,"nodeType":"181","endLine":115,"endColumn":49},{"ruleId":"163","severity":1,"message":"182","line":130,"column":6,"nodeType":"165","endLine":130,"endColumn":8,"suggestions":"183"},{"ruleId":"171","severity":1,"message":"172","line":111,"column":11,"nodeType":"173","endLine":111,"endColumn":66},{"ruleId":"159","severity":1,"message":"184","line":8,"column":11,"nodeType":"161","messageId":"162","endLine":8,"endColumn":25},{"ruleId":"163","severity":1,"message":"185","line":50,"column":6,"nodeType":"165","endLine":50,"endColumn":12,"suggestions":"186"},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTuwueets'. Either include it or remove the dependency array.","ArrayExpression",["189"],["187"],["188"],["187"],["188"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["190"],"'e' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfileInfo'. Either include it or remove the dependency array.",["191"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'getTuwueet', 'id', and 'renderComments'. Either include them or remove the dependency array.",["192"],"'profilePicture' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllNotifications'. Either include it or remove the dependency array.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [loadTuwueets]",{"range":"204","text":"205"},"Update the dependencies array to be: [history]",{"range":"206","text":"207"},"Update the dependencies array to be: [getProfileInfo]",{"range":"208","text":"209"},"Update the dependencies array to be: [getTuwueet, id, renderComments]",{"range":"210","text":"211"},"Update the dependencies array to be: [getAllNotifications, open]",{"range":"212","text":"213"},[2010,2012],"[loadTuwueets]",[1397,1399],"[history]",[2590,2592],"[getProfileInfo]",[3469,3471],"[getTuwueet, id, renderComments]",[1606,1612],"[getAllNotifications, open]"]